datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
}

generator db {
  provider = "go run github.com/steebchen/prisma-client-go"
}

// Tenants are the top level of the hierarchy and can own
// multiple teams and users.
model Tenant {
  id         String       @id @default(cuid()) @db.VarChar(25)
  created    DateTime     @default(now()) @db.Timestamptz()
  updated    DateTime     @updatedAt @db.Timestamptz()
  name       String
  status     String       @default("pending") @db.VarChar(30)
  User       User[]
  Team       Team[]
  Deployment Deployment[]

  @@map("tenants")
}

// Users are the second level of the hierarchy and can belong
// to multiple teams. Users must belong to one tenant.
model User {
  id        String     @id @default(cuid()) @db.VarChar(25)
  email     String     @unique
  password  String
  status    String
  created   DateTime   @default(now()) @db.Timestamptz()
  updated   DateTime   @updatedAt @db.Timestamptz()
  tenant    Tenant?    @relation(fields: [tenant_id], references: [id])
  tenant_id String?    @db.VarChar(25)
  teams     TeamUser[]

  @@map("users")
}

// TeamUser is a many-to-many relationship between Users and Teams.
model TeamUser {
  user_id String @db.VarChar(25)
  team_id String @db.VarChar(25)

  user User @relation(fields: [user_id], references: [id])
  team Team @relation(fields: [team_id], references: [id])

  @@id([user_id, team_id])
  @@map("user_team")
}

// Teams are the third level of the hierarchy and can belong
// to multiple users. Teams must belong to one tenant.
model Team {
  id          String           @id @default(cuid()) @db.VarChar(25)
  created     DateTime         @default(now()) @db.Timestamptz()
  updated     DateTime         @updatedAt @db.Timestamptz()
  name        String
  tenant      Tenant?          @relation(fields: [tenant_id], references: [id])
  tenant_id   String?          @db.VarChar(25)
  users       TeamUser[]
  deployments DeploymentTeam[]

  @@map("teams")
}

// DeploymentTeam is a many-to-many relationship between Deployments and Teams.
model DeploymentTeam {
  deployment_id String @db.VarChar(25)
  team_id       String @db.VarChar(25)

  deployment Deployment @relation(fields: [deployment_id], references: [id])
  team       Team       @relation(fields: [team_id], references: [id])

  @@id([deployment_id, team_id])
  @@map("deployment_team")
}

// Deployments are the fourth level of the hierarchy and can belong
// to one tenant. Deployments can belong to multiple teams for sharing.
model Deployment {
  id          String           @id @default(cuid()) @db.VarChar(25)
  created     DateTime         @default(now()) @db.Timestamptz()
  updated     DateTime         @updatedAt @db.Timestamptz()
  name        String           @db.VarChar(30)
  description String?          @db.VarChar(255)
  status      String           @db.VarChar(30)
  version     String           @db.VarChar(30)
  tenant      Tenant?          @relation(fields: [tenant_id], references: [id])
  tenant_id   String?          @db.VarChar(25)
  teams       DeploymentTeam[]

  @@map("deployments")
}
